// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

package protobuf2map

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Things int32

const (
	Things_BEER_CAP Things = 0
	Things_HEAD_CAP Things = 1
	Things_JOKE     Things = 2
)

var Things_name = map[int32]string{
	0: "BEER_CAP",
	1: "HEAD_CAP",
	2: "JOKE",
}
var Things_value = map[string]int32{
	"BEER_CAP": 0,
	"HEAD_CAP": 1,
	"JOKE":     2,
}

func (x Things) String() string {
	return proto.EnumName(Things_name, int32(x))
}
func (Things) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_test_9572603523718bdd, []int{0}
}

type Test struct {
	FieldInt32  int32   `protobuf:"varint,1,opt,name=field_int32,json=fieldInt32,proto3" json:"field_int32,omitempty"`
	FieldString string  `protobuf:"bytes,2,opt,name=field_string,json=fieldString,proto3" json:"field_string,omitempty"`
	FieldInt64  int64   `protobuf:"varint,3,opt,name=field_int64,json=fieldInt64,proto3" json:"field_int64,omitempty"`
	FieldFloat  float32 `protobuf:"fixed32,4,opt,name=field_float,json=fieldFloat,proto3" json:"field_float,omitempty"`
	FieldBool   bool    `protobuf:"varint,5,opt,name=field_bool,json=fieldBool,proto3" json:"field_bool,omitempty"`
	// repeated
	FieldInt32S  []int32   `protobuf:"varint,31,rep,packed,name=field_int32s,json=fieldInt32s,proto3" json:"field_int32s,omitempty"`
	FieldStrings []string  `protobuf:"bytes,32,rep,name=field_strings,json=fieldStrings,proto3" json:"field_strings,omitempty"`
	FieldInt64S  []int64   `protobuf:"varint,33,rep,packed,name=field_int64s,json=fieldInt64s,proto3" json:"field_int64s,omitempty"`
	FieldFloats  []float32 `protobuf:"fixed32,34,rep,packed,name=field_floats,json=fieldFloats,proto3" json:"field_floats,omitempty"`
	FieldBools   []bool    `protobuf:"varint,35,rep,packed,name=field_bools,json=fieldBools,proto3" json:"field_bools,omitempty"`
	// nested
	FieldFoo  *Foo   `protobuf:"bytes,61,opt,name=field_foo,json=fieldFoo,proto3" json:"field_foo,omitempty"`
	FieldFoos []*Foo `protobuf:"bytes,62,rep,name=field_foos,json=fieldFoos,proto3" json:"field_foos,omitempty"`
	// map
	FieldMapStringInt32  map[string]int32 `protobuf:"bytes,70,rep,name=field_map_string_int32,json=fieldMapStringInt32,proto3" json:"field_map_string_int32,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	FieldMapInt64_Foo    map[int64]*Foo   `protobuf:"bytes,71,rep,name=field_map_int64_Foo,json=fieldMapInt64Foo,proto3" json:"field_map_int64_Foo,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FieldEnum            Things           `protobuf:"varint,80,opt,name=field_enum,json=fieldEnum,proto3,enum=protobuf2map.Things" json:"field_enum,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Test) Reset()         { *m = Test{} }
func (m *Test) String() string { return proto.CompactTextString(m) }
func (*Test) ProtoMessage()    {}
func (*Test) Descriptor() ([]byte, []int) {
	return fileDescriptor_test_9572603523718bdd, []int{0}
}
func (m *Test) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Test.Unmarshal(m, b)
}
func (m *Test) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Test.Marshal(b, m, deterministic)
}
func (dst *Test) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Test.Merge(dst, src)
}
func (m *Test) XXX_Size() int {
	return xxx_messageInfo_Test.Size(m)
}
func (m *Test) XXX_DiscardUnknown() {
	xxx_messageInfo_Test.DiscardUnknown(m)
}

var xxx_messageInfo_Test proto.InternalMessageInfo

func (m *Test) GetFieldInt32() int32 {
	if m != nil {
		return m.FieldInt32
	}
	return 0
}

func (m *Test) GetFieldString() string {
	if m != nil {
		return m.FieldString
	}
	return ""
}

func (m *Test) GetFieldInt64() int64 {
	if m != nil {
		return m.FieldInt64
	}
	return 0
}

func (m *Test) GetFieldFloat() float32 {
	if m != nil {
		return m.FieldFloat
	}
	return 0
}

func (m *Test) GetFieldBool() bool {
	if m != nil {
		return m.FieldBool
	}
	return false
}

func (m *Test) GetFieldInt32S() []int32 {
	if m != nil {
		return m.FieldInt32S
	}
	return nil
}

func (m *Test) GetFieldStrings() []string {
	if m != nil {
		return m.FieldStrings
	}
	return nil
}

func (m *Test) GetFieldInt64S() []int64 {
	if m != nil {
		return m.FieldInt64S
	}
	return nil
}

func (m *Test) GetFieldFloats() []float32 {
	if m != nil {
		return m.FieldFloats
	}
	return nil
}

func (m *Test) GetFieldBools() []bool {
	if m != nil {
		return m.FieldBools
	}
	return nil
}

func (m *Test) GetFieldFoo() *Foo {
	if m != nil {
		return m.FieldFoo
	}
	return nil
}

func (m *Test) GetFieldFoos() []*Foo {
	if m != nil {
		return m.FieldFoos
	}
	return nil
}

func (m *Test) GetFieldMapStringInt32() map[string]int32 {
	if m != nil {
		return m.FieldMapStringInt32
	}
	return nil
}

func (m *Test) GetFieldMapInt64_Foo() map[int64]*Foo {
	if m != nil {
		return m.FieldMapInt64_Foo
	}
	return nil
}

func (m *Test) GetFieldEnum() Things {
	if m != nil {
		return m.FieldEnum
	}
	return Things_BEER_CAP
}

type Foo struct {
	Foo                  string   `protobuf:"bytes,1,opt,name=foo,proto3" json:"foo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Foo) Reset()         { *m = Foo{} }
func (m *Foo) String() string { return proto.CompactTextString(m) }
func (*Foo) ProtoMessage()    {}
func (*Foo) Descriptor() ([]byte, []int) {
	return fileDescriptor_test_9572603523718bdd, []int{1}
}
func (m *Foo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Foo.Unmarshal(m, b)
}
func (m *Foo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Foo.Marshal(b, m, deterministic)
}
func (dst *Foo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Foo.Merge(dst, src)
}
func (m *Foo) XXX_Size() int {
	return xxx_messageInfo_Foo.Size(m)
}
func (m *Foo) XXX_DiscardUnknown() {
	xxx_messageInfo_Foo.DiscardUnknown(m)
}

var xxx_messageInfo_Foo proto.InternalMessageInfo

func (m *Foo) GetFoo() string {
	if m != nil {
		return m.Foo
	}
	return ""
}

func init() {
	proto.RegisterType((*Test)(nil), "protobuf2map.Test")
	proto.RegisterMapType((map[int64]*Foo)(nil), "protobuf2map.Test.FieldMapInt64FooEntry")
	proto.RegisterMapType((map[string]int32)(nil), "protobuf2map.Test.FieldMapStringInt32Entry")
	proto.RegisterType((*Foo)(nil), "protobuf2map.Foo")
	proto.RegisterEnum("protobuf2map.Things", Things_name, Things_value)
}

func init() { proto.RegisterFile("test.proto", fileDescriptor_test_9572603523718bdd) }

var fileDescriptor_test_9572603523718bdd = []byte{
	// 477 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x6f, 0x8b, 0xd3, 0x40,
	0x10, 0xc6, 0xdd, 0x6c, 0x53, 0x92, 0xb9, 0x2a, 0x71, 0xef, 0xd4, 0xe5, 0x40, 0x6e, 0xaf, 0xf7,
	0xc2, 0x45, 0x21, 0x48, 0x5b, 0x8a, 0x08, 0x0a, 0x77, 0x9a, 0xf8, 0x0f, 0xf1, 0x88, 0xa2, 0x2f,
	0x6b, 0x8a, 0x89, 0x16, 0xd3, 0x4c, 0xe9, 0xa6, 0xc2, 0x7d, 0x47, 0x3f, 0x94, 0xec, 0x9f, 0x92,
	0xf4, 0xac, 0xbe, 0x6a, 0x67, 0x32, 0xcf, 0x2f, 0xcf, 0x33, 0x13, 0x80, 0xa6, 0x50, 0x4d, 0xbc,
	0x5a, 0x63, 0x83, 0x6c, 0x60, 0x7e, 0xe6, 0x9b, 0x72, 0xb4, 0xcc, 0x57, 0xc3, 0xdf, 0x7d, 0xe8,
	0x7d, 0x2a, 0x54, 0xc3, 0x4e, 0xe0, 0xa0, 0x5c, 0x14, 0xd5, 0xb7, 0xd9, 0xa2, 0x6e, 0xc6, 0x23,
	0x4e, 0x04, 0x91, 0x7e, 0x06, 0xa6, 0xf5, 0x46, 0x77, 0xd8, 0x29, 0x0c, 0xec, 0x80, 0x6a, 0xd6,
	0x8b, 0xfa, 0x3b, 0xf7, 0x04, 0x91, 0x61, 0x66, 0x45, 0x1f, 0x4d, 0x6b, 0x87, 0x31, 0x9d, 0x70,
	0x2a, 0x88, 0xa4, 0x2d, 0x63, 0x3a, 0x69, 0x07, 0xca, 0x0a, 0xf3, 0x86, 0xf7, 0x04, 0x91, 0x9e,
	0x1b, 0x48, 0x75, 0x87, 0xdd, 0x07, 0x5b, 0xcd, 0xe6, 0x88, 0x15, 0xf7, 0x05, 0x91, 0x41, 0x16,
	0x9a, 0xce, 0x05, 0x62, 0xd5, 0x7a, 0x30, 0x26, 0x15, 0x3f, 0x11, 0x54, 0xfa, 0xce, 0x83, 0x71,
	0xa9, 0xd8, 0x19, 0xdc, 0xec, 0xda, 0x54, 0x5c, 0x08, 0x2a, 0xc3, 0x6c, 0xd0, 0xf1, 0xa9, 0x76,
	0x38, 0xd3, 0x89, 0xe2, 0xa7, 0x82, 0x4a, 0xda, 0x72, 0xa6, 0x93, 0xce, 0x88, 0xb1, 0xaa, 0xf8,
	0x50, 0x50, 0xe9, 0xb9, 0x11, 0xe3, 0x55, 0xb5, 0x69, 0xb4, 0x59, 0xc5, 0xcf, 0x04, 0x95, 0x81,
	0x4b, 0xa3, 0xdd, 0x2a, 0x16, 0x43, 0xe8, 0x18, 0x88, 0xfc, 0x99, 0x20, 0xf2, 0x60, 0x74, 0x3b,
	0xee, 0xae, 0x3f, 0x4e, 0x11, 0xb3, 0xc0, 0x32, 0x11, 0xd9, 0xe3, 0x6d, 0xfa, 0x12, 0x51, 0xf1,
	0xe7, 0x82, 0xee, 0x17, 0x84, 0x5b, 0x81, 0x62, 0x5f, 0xe1, 0xae, 0x55, 0x2c, 0xf3, 0x95, 0x4b,
	0xec, 0x0e, 0x98, 0x1a, 0xf5, 0xa3, 0x5d, 0xb5, 0xbe, 0x74, 0x9c, 0x6a, 0xc1, 0xfb, 0x7c, 0x65,
	0x97, 0x61, 0xd6, 0x96, 0xd4, 0xcd, 0xfa, 0x2a, 0x3b, 0x2c, 0xff, 0x7e, 0xc2, 0xbe, 0xc0, 0x61,
	0xfb, 0x06, 0xb3, 0xae, 0x59, 0x8a, 0xc8, 0x5f, 0x19, 0xbc, 0xfc, 0x0f, 0xde, 0xec, 0x31, 0x45,
	0xb4, 0xec, 0xa8, 0xbc, 0xd6, 0x66, 0xe3, 0x6d, 0xd8, 0xa2, 0xde, 0x2c, 0xf9, 0xa5, 0x20, 0xf2,
	0xd6, 0xe8, 0xe8, 0x1a, 0xef, 0x87, 0xbe, 0x96, 0xcb, 0x9b, 0xd4, 0x9b, 0xe5, 0x71, 0x0a, 0xfc,
	0x5f, 0xf6, 0x59, 0x04, 0xf4, 0x67, 0x71, 0x65, 0xbe, 0xdc, 0x30, 0xd3, 0x7f, 0xd9, 0x11, 0xf8,
	0xbf, 0xf2, 0x6a, 0x53, 0x98, 0x6f, 0xd5, 0xcf, 0x6c, 0xf1, 0xd4, 0x7b, 0x42, 0x8e, 0x3f, 0xc3,
	0x9d, 0xbd, 0x3e, 0xbb, 0x10, 0x6a, 0x21, 0x0f, 0xba, 0x90, 0xbd, 0xf7, 0x68, 0xb9, 0xc3, 0x7b,
	0x40, 0x75, 0xb6, 0x08, 0xa8, 0x3e, 0xb9, 0xb3, 0x52, 0x22, 0x3e, 0x8c, 0xa1, 0x6f, 0xd3, 0xb0,
	0x01, 0x04, 0x17, 0x49, 0x92, 0xcd, 0x5e, 0x9c, 0x5f, 0x46, 0x37, 0x74, 0xf5, 0x3a, 0x39, 0x7f,
	0x69, 0x2a, 0xc2, 0x02, 0xe8, 0xbd, 0xfd, 0xf0, 0x2e, 0x89, 0xbc, 0x79, 0xdf, 0xbc, 0x65, 0xfc,
	0x27, 0x00, 0x00, 0xff, 0xff, 0x73, 0x8b, 0xc2, 0x36, 0xba, 0x03, 0x00, 0x00,
}
